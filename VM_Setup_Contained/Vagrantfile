Vagrant.configure("2") do |config|
    # ======================== KALI Settings ==========================
    config.vm.define "ko" do |ko|
        ko.vm.box = "kalilinux/rolling"  
        ko.vm.hostname = "ko"

        # Set size and memory for the VM
        ko.vm.provider :virtualbox do |v, override|
            v.name = "KO-Kali"
            v.gui = true
            v.cpus = 4
            v.memory = 6144
            v.customize ["modifyvm", :id, "--vram", 16]

            # Add in optical drive
            v.customize ["storageattach", :id, "--storagectl", "IDE Controller", "--port", "0", "--device", "1", "--type", "dvddrive", "--medium", "emptydrive"]
            
            v.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
            v.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-interval", 10000 ]
            v.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-min-adjust", 100 ]
        end

        vagrant_root = File.dirname(__FILE__)
        ko.vm.provision "shell", inline: "sudo usermod -G vboxsf -a vagrant"
        ko.vm.provision "file", source: vagrant_root+"/bash_aliases", destination: "~/.bash_aliases"
        ko.vm.provision "file", source: vagrant_root+"/setup_playbook.yml", destination: "/home/vagrant/Desktop/VM_Setup/"
        ko.vm.provision "file", source: vagrant_root+"/software_playbook.yml", destination: "/home/vagrant/Desktop/VM_Setup/"

        # ======================== KALI Provisioning ==========================
        $script = <<-SCRIPT
        echo Installing Ansible on Kali VM...
        sudo apt-get install ansible -y
        echo KALI Provisioning...
        ansible-playbook /home/vagrant/Desktop/VM_Setup/setup_playbook.yml -e 'ansible_python_interpreter=/usr/bin/python3' -vvv

        SCRIPT

        ko.vm.provision "shell", inline: $script
        
        # ======================== SOFTWARE Provisioning ==========================
        $script = <<-SCRIPT
        echo SOFTWARE Provisioning...
        ansible-playbook /home/vagrant/Desktop/VM_Setup/software_playbook.yml -e 'ansible_python_interpreter=/usr/bin/python3' -vvv

        SCRIPT

        ko.vm.provision "shell", inline: $script
        ko.vm.provision "file", source: vagrant_root+"/tmux_config", destination: "~/.tmux.conf" 
        ko.vm.provision "shell", reboot: true
    end
end
